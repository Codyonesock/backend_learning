services:
  scylla:
    image: scylladb/scylla:latest
    container_name: scylla
    ports:
      - "9042:9042"
    volumes:
      - scylla-data:/var/lib/scylla
    environment:
      - SCYLLA_CONF=/etc/scylla/scylla.yaml
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 10s
      timeout: 10s
      retries: 10

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: redpanda
    ports:
      - "9092:9092"
      - "9644:9644"
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --advertise-kafka-addr=redpanda:9092
      - --kafka-addr=0.0.0.0:9092
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9644/v1/status/ready"]
      interval: 10s
      timeout: 5s
      retries: 10

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=redpanda:9092
    volumes:
      - ../ch-6/proto:/proto:ro
    depends_on:
      - redpanda

  producer:
    build:
      context: ..
      dockerfile: ch-1/cmd/producer/Dockerfile
    depends_on:
      redpanda:
        condition: service_healthy
    env_file:
      - ../.env
    ports:
      - "2112:2112"

  consumer:
    build:
      context: ..
      dockerfile: ch-1/cmd/consumer/Dockerfile
    depends_on:
      redpanda:
        condition: service_healthy
      scylla:
        condition: service_healthy
    env_file:
      - ../.env

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - producer
      - consumer

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  scylla-data: